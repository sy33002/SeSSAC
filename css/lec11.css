.container{
    width: 300px;
    height: 400px;
    background-color: #333;
    /* 좌우 방향으로 가운데 배치 */
    margin: 0 auto;

    display: flex;
    /* 부모 요소에 "flex"를 선언하면, 자식 요소들이 가로 방향으로 배치가 된다 */
    /* 
        flexbox 기본 용어
        - 주축 (main axis): 아이템의 배치 방향을 의미
        - 교차축 (cross axis): 주축의 수직축을 의미
    */
    /* flex-direction: flex방향을 설정(주축의 방향 설정)
        - row(default): 수평 정렬(좌 -> 우)
        - row-reverse: 수평 정렬(우 -> 좌)
        - column: 수직 정렬(위 -> 아래)
        - column-reverse: 수직정렬(아래 -> 위)
    */
    /* row일 때 */
    /* flex-direction: row; */
    /* flex-direction: row-reverse; */
    /* column 때 */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* 
        justify-content: 주축 아이템을 어떻게 배치할 것인지?
        - flex-direction이 수평 정렬; 주축 = row (가로)
        - flex-direction이 수직 정렬; 주축 = column (세로)
        
        - flex-start (default): 아이템을 주축에 대해서 start지점을 기준으로 나열 
        - flex-end: 아이템을 주축에 대해서 end 지점을 기준으로 나열
        - space-between: 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 영역 공평하게 나눔
        - space-around: 아이템들의 모든 여백을 공평하게 갖도록 함 (양끝 영역의 단위가 1이라면, 나머지 영역의 단위는 2)
        - space-evenly: start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템 부터 end 까지의 모든 간격이 일정
    */

    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인지?
        - flex-direction이 수평정렬; 주축 = row(가로)
        - flex-direction이 수직정렬; 주축 = column(세로)

        - stretch (default): container의 교차축을 채우기 위해 늘림
            - 현재 .flex-items 에 width, height 값이 있어 늘어나지는 않음
        - flex-start: 교차축에 대하여 시작점으로 정렬
        - flex-end: 교차축에 대하여 끝점으로 정렬
        - center: 교차축에 대하여 가운데 정렬
        - baseline: 아이템을 텍스트의 베이스라인을 기준 정렬
     */
    /* align-items: stretch; */
    /* align-items: flex-start; */
    /* align-items: flex-end;*/
    /* align-items: center; */
    /* align-items: baseline; */

    /* flex-wrap: 줄바꿈 (개행) 처리
        -> 컨테이너(부모)가 한줄에 아이템을 다 수용하지 못할 때, 줄바꿈 관련 설정
        - nowrap(default): 줄바꿈 안함
        - wrap: 줄바꿈함
        - wrap-reverse: 줄바꿈 하는데 아이템을 단순 배치
    */
    /* flex-wrap: nowrap; */
    /* flex-wrap: wrap; */
    /* flex-wrap: wrap-reverse; */

    /* align-content: 여러 행에 대한 정렬
        (조건) flex-wrap: wrap상태에서 아이템이 두 줄 이상일 때 수직축 방향 설정함 */
    /* align-content: stretch; */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: center; */
    /* align-content: space-between; */
    /* align-content: space-around; */
    /* align-content: space-evenly; */
}
/* 정가운데 배치 */
.outer{
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}
.inner{
    width: 100px;
    height: 100px;
    background-color: coral;
}
/* ver1. position, transform */
.outer1{
    position: relative;
}
.inner1{
    position: absolute;
    top: 50%;
    left: 50%;
    /* 여기까지하면 작은 사각형의 왼쪽위 꼭지점 기준으로 이동하는 것 */
    transform: translate(-50%, -50%);
    /* inner의 크기의 절반(50%)만큼 -방향으로 이동한 것 */
}

/* ver2. flex */
.outer2{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.items{
    width: 100px;
    height: 100px;
    font-size: 20px;
    text-align: center;
    /* 상자의 height와 line-height가 같은 
    픽셀이면 위아래 가운데로 위치할 수 있음 */
    line-height: 100px;
}

.item1{
    background-color: red;
}
.item2{
    background-color: rgb(230, 230, 35);
}
.item3{
    background-color: rgb(26, 220, 84);
}
.item4{
    background-color: rgb(18, 43, 134);
}
.item5{
    background-color: rgb(96, 37, 137);
}

